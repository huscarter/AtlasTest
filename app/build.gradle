// version define
group = "com.whh"
version = getEnvValue("versionName", "1.0.0")
def apVersion = getEnvValue("apVersion", "");

// plugin define
apply plugin: 'com.android.application'
apply plugin: 'com.taobao.atlas'

android {
    compileSdkVersion COMPILE_SDK_VERSION as int
    buildToolsVersion BUILD_TOOLS_VERSION
    defaultConfig {
        applicationId "com.whh.atlastest"
        minSdkVersion MIN_SDK_VERSION
        targetSdkVersion TARGET_SDK_VERSION
        versionCode VERSION_CODE as int
        versionName version

        /**
         * 可以使用library的资源文件
         */
        vectorDrawables.useSupportLibrary = true
    }

    dataBinding {
        enabled = true
    }

    //签名配置
//    signingConfigs {
//        debug {
//            //
//        }
//
//        release {
//            storeFile file("shipindiy.keystore") //签名证书文件
//            storePassword "shipindiy" //签名证书密码
//            keyAlias "jushi" //别名
//            keyPassword "shipindiy" //别名密码
//        }
//    }
//
//    buildTypes {
//        debug {
//            minifyEnabled false
//            debuggable true //启用debug的buildType配置
//            signingConfig signingConfigs.debug  //使用release证书签名
//            zipAlignEnabled false
//            shrinkResources false
//
//        }
//
//        release {
//            minifyEnabled true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.release  //使用release证书签名
//
//            zipAlignEnabled true //开启Zipalign优化
//            shrinkResources true //移除无用的resource文件，此项只有在开启混淆时才生效
//
//        }
//
//        // 多渠道打包配置
//        applicationVariants.all { variant ->
//            variant.outputs.each { output ->
//                def output_file = output.outputFile
//                def dir = output_file.parent
//                if (output_file != null && output_file.name.endsWith('.apk')) {
//                    def name
//                    if (variant.buildType.name.equals('release')) {
//                        name = "app_release.apk"
//                    } else {
//                        name = "app_debug.apk"
//                    }
//                    output.outputFile = new File(dir, name)
//                }
//            }
//        }// end applicationVariants
//    }
}

atlas {
    atlasEnabled true
    tBuildConfig {
        /**
         * 自启动bundle配置
         */
//        autoStartBundles = ['com.whh.firstbundle']
        /**
         * 输出成apk
         */
        outOfApkBundles = ['remotebundle']
        /**
         * 预执行方法className:methodName
         */
        preLaunch = 'com.whh.atlastest.DemoPreLaunch'
    }

    manifestOptions {
        addAtlasProxyComponents true
    }

    patchConfigs {
        debug {
            createTPatch true
        }
    }

    buildTypes {
        debug {
            if (apVersion) {
                baseApDependency "com.whh:AP-debug:${apVersion}@ap"
                patchConfig patchConfigs.debug
            }
        }

//        release {
//            if (apVersion) {
//                baseApDependency "$group:AP-debug:${apVersion}@ap"
//                patchConfig patchConfigs.debug
//            }
//        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

//    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
//        exclude group: 'com.android.support', module: 'support-annotations'
//    })
//    testCompile 'junit:junit:4.12'

    compile "com.android.support:appcompat-v7:$SUPPORT_VERSION"
    compile "com.android.support:design:$SUPPORT_VERSION"
    compile "com.android.support:support-v4:$SUPPORT_VERSION"
    compile "com.android.support:recyclerview-v7:$SUPPORT_VERSION"
    compile "com.android.support.constraint:constraint-layout:1.0.2"

    compile 'com.alibaba:fastjson:1.1.45.android@jar'

    // atlas
    compile("com.taobao.android:atlas_core:5.0.7.30@aar"){
        transitive = true
    }
    compile "com.taobao.android:atlasupdate:1.1.4.10@aar"

    // include project
    compile project(":middlewarelibrary")

    // bundle include
    bundleCompile project(':firstbundle')
    bundleCompile project(':remotebundle')
}

repositories {
    mavenLocal()
    jcenter()
}

/**
 * 获取atlas的版本
 * @param key
 * @param defValue
 * @return
 */
String getEnvValue(key, defValue) {
    def val = System.getProperty(key);
    if (null != val) {
        return val;
    }
    val = System.getenv(key);
    if (null != val) {
        return val;
    }
    return defValue;
}

// to publish
apply plugin: 'maven'
apply plugin: 'maven-publish'

publishing {
    publications {
        maven(MavenPublication) {
            artifact "${project.buildDir}/outputs/apk/${project.name}-debug.ap"
            groupId group
            artifactId "AP-debug"
        }
    }

    repositories {
        mavenLocal()
    }

}
